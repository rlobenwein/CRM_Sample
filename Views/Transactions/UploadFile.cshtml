@model List<RLBW_ERP.Models.ViewModels.TransactionsViewModel>

<form asp-asp-controller="Transactions" asp-action="SaveFile" class="myForm" method="post">
    <div class="input-group mb-3">
        @if (Model.Any(x => !x.Locked))
        {
            <input type="submit" value="Salvar" class="btn btn-outline-secondary" />
        }
        <a asp-action="Index" class="btn btn-outline-secondary">Voltar</a>
    </div>

    @for (int i = 0; i < Model.Count(); i++)
    {
        <div class="row justify-content-start">
            @if (Model[i].Locked)
            {

                <div class="row justify-content-start">
                    <p class="text-danger">Transação já carregada para o Banco de dados. Caso necessário, a edição deve ser feita individualmente.</p>
                </div>
            }
            <div class="row justify-content-start">
                <div class="col-2 col-md-1 align-self-auto">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input asp-for="@Model[i].Id" type="hidden" class="form-control" />
                        <input asp-for="@Model[i].IsIncurred" type="hidden" class="form-control" />
                    <div class="form-group">
                        <label asp-for="@Model[i].Date" class="control-label"></label>
                        <input asp-for="@Model[i].Date" class="form-control" readonly=@Model[i].Locked />
                        <span asp-validation-for="@Model[i].Date" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-1 col-md-1 align-self-auto">
                    @if (Model[i].Locked)
                    {
                        <div class="form-group form-check">
                            <input class="form-check-input isExpense" type="hidden" asp-for="@Model[i].IsExpense" />
                        </div>
                        <div class="form-group form-check">
                            <input class="form-check-input isExpense" type="checkbox" id="isExpense-@i" disabled /> @Html.DisplayNameFor(model => Model[i].IsExpense)
                        </div>
                    }
                    else
                    {
                        <div class="form-group form-check">
                            <input class="form-check-input isExpense" type="checkbox" role="switch" id="isExpense-@i" asp-for="@Model[i].IsExpense" /> @Html.DisplayNameFor(model => Model[i].IsExpense)
                        </div>
                    }
                </div>
                <div class="col-2 col-md-1 ">
                    <div class="form-group">
                        <label for="Category-@i" class="control-label">Categoria</label>
                        <select id="Category-@i" class="form-control category" readonly=@Model[i].Locked asp-items="@(new SelectList(ViewBag.CategoryId, "Value", "Text", @Model[i].TransactionType.Subcategory.CategoryId))"></select>
                    </div>
                </div>
                <div class="col-2 align-self-auto">
                    <div class="form-group">
                        <label for="Subcategory-@i" class="control-label">Subcategoria</label>
                        <select id="Subcategory-@i" class="form-control subcategory" readonly=@Model[i].Locked asp-items="@(new SelectList(ViewBag.SubcategoryId, "Value", "Text", @Model[i].TransactionType.SubcategoryId))"></select>
                    </div>
                </div>
                <div class="col-2 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].TypeId" class="control-label"></label>
                        <select id="Type-@i" asp-for="@Model[i].TypeId type" readonly=@Model[i].Locked class="form-control type" asp-items="@(new SelectList(ViewBag.TypeId, "Value", "Text", @Model[i].TypeId))"></select>
                    </div>
                </div>
                <div class="col-4 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].Description" class="control-label"></label>
                        <input asp-for="@Model[i].Description" class="form-control" readonly=@Model[i].Locked />
                        <span asp-validation-for="@Model[i].Description" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-1 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].Value" class="control-label"></label>
                        <input asp-for="@Model[i].Value" class="form-control" readonly=@Model[i].Locked data-val="true" data-val-number="The field Valor must be a number." data-val-regex="Invalid number format. Please use a comma as the decimal separator." />
                        <span asp-validation-for="@Model[i].Value" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-1 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].Document" class="control-label"></label>
                        <input asp-for="@Model[i].Document" class="form-control" readonly=@Model[i].Locked />
                        <span asp-validation-for="@Model[i].Document" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-2 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].PaymentAccountId" class="control-label"></label>
                        <select asp-for="@Model[i].PaymentAccountId" class="form-control" readonly=@Model[i].Locked asp-items="@(new SelectList(ViewBag.PaymentAccountId, "Value", "Text", @Model[i].PaymentAccountId))"></select>
                    </div>
                </div>
                <div class="col-3 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].Notes" class="control-label"></label>
                        <input asp-for="@Model[i].Notes" class="form-control" readonly=@Model[i].Locked />
                        <span asp-validation-for="@Model[i].Notes" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-1 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].BankTransactionId" class="control-label"></label>
                        <input asp-for="@Model[i].BankTransactionId" class="form-control" readonly />
                        <span asp-validation-for="@Model[i].BankTransactionId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-3 align-self-auto">
                    <div class="form-group">
                        <label asp-for="@Model[i].StatementLine" class="control-label"></label>
                        <input asp-for="@Model[i].StatementLine" class="form-control" readonly />
                        <span asp-validation-for="@Model[i].StatementLine" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>
        <hr />

    }
    <div class="input-group mb-3">
        @if (Model.Any(x=>!x.Locked))
        {
            <input type="submit" value="Salvar" class="btn btn-outline-secondary" />
        }
        <a asp-action="Index" class="btn btn-outline-secondary">Voltar</a>
    </div>

</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^[0-9]+(,[0-9]+)?$/.test(value);
        };
        $(document).on('change', '.isExpense', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var elementChecked = $(this).prop("checked");
            var isExpenseElementId = $(this).attr("id");
            var index = GetElementIndex(isExpenseElementId);
            var categoryElementId = '#Category-' + index;
            var subcategoryElementId = '#Subcategory-' + index;
            var typeElementId = '#Type-' + index;
            //console.log('subcategoryElementId', subcategoryElementId);
            var selectItem = "<option value=0>Selecione</option>";
            $(categoryElementId).empty();
            $(categoryElementId).html(selectItem);
            $(subcategoryElementId).empty();
            $(subcategoryElementId).html(selectItem);
            $(typeElementId).empty();
            $(typeElementId).html(selectItem);
            GetCategoriesList(url, isExpenseElementId, elementChecked);
        });
        $(document).on('click', '.category', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var categoryElementId = $(this).attr("id");
            var isExpenseElement = "#isExpense-" + GetElementIndex(categoryElementId);
            var elementChecked = $(isExpenseElement).prop("checked");
            GetCategoriesList(url, categoryElementId, elementChecked);
        });
        $(document).on('change', '.category', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var categoryId = $(this).val();
            var subcategoryElementId = "Subcategory-" + GetElementIndex($(this).attr("Id"));
            //console.log('change category --> subcategoryElementId', subcategoryElementId);
            //console.log('change category --> categoryId', categoryId);
            GetSubcategoriesList(url, categoryId, subcategoryElementId);
        });
        $(document).on('click', '.subcategory', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var subcategoryElementId = $(this).attr("id");
            var categoryElementId = '#Category-' + GetElementIndex(subcategoryElementId);
            var categoryId = $(categoryElementId).val();
            // console.log('subcategory click --> subcategoryElementId', subcategoryElementId);
            // console.log('subcategory click --> categoryElementId', categoryElementId);
            // console.log('subcategory click --> categoryId', categoryId);
            GetSubcategoriesList(url, categoryId, subcategoryElementId);
        });
        $(document).on('change', '.subcategory', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var subcategoryId = $(this).val();
            var typeElementId = '#Type-' + GetElementIndex($(this).attr("id"));
            // console.log('subcategory change --> typeElementId', typeElementId);
            GetTypesList(url, subcategoryId, typeElementId);
        });
        $(document).on('click', '.type', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var typeElementId = '#' + $(this).attr("id");
            var subcategoryElementId = '#Subcategory-' + GetElementIndex(typeElementId)
            var subcategoryId = $(subcategoryElementId).val();
            // console.log('type click --> typeElementId', typeElementId);
            // console.log('type click --> subcategoryElementId', subcategoryElementId);
            // console.log('type click --> subcategoryId', subcategoryId);
            GetTypesList(url, subcategoryId, typeElementId);
        });
    </script>
}
