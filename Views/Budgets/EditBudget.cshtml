@model List<RLBW_ERP.Models.FinanceModels.Budget>

<div>
    <h4>Orçamento @Model.First().Year</h4>
    <h6>Baseado no orçamento de @ViewBag.YearReference</h6>
    <form asp-action="SaveEditedBudget" class="myForm" method="post">
        <div class="input-group mb-3">
            <input type="submit" value="Salvar" class="btn btn-outline-secondary" />
            <a asp-action="Index" class="btn btn-outline-secondary">Voltar</a>
        </div>

        @for (int i = 0; i < Model.Count(); i++)
        {
            <div class="row justify-content-start">
                <div class="row justify-content-start">
                    <div class="col-2 col-md-1 align-self-auto">
                        <input type="hidden" asp-for="@Model[i].Id"/>
                        <input type="hidden" asp-for="@Model[i].Year"/>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="@Model[i].Description" class="control-label"></label>
                            <input asp-for="@Model[i].Description" class="form-control" />
                            <span asp-validation-for="@Model[i].Description" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-2 col-md-1 ">
                        <div class="form-group">
                            <label for="Category-@i" class="control-label">Categoria</label>
                            <select id="Category-@i" class="form-control category" asp-items="@(new SelectList(ViewBag.CategoryId, "Value", "Text", @Model[i].TransactionType.Subcategory.CategoryId))"></select>
                        </div>
                    </div>
                    <div class="col-2 align-self-auto">
                        <div class="form-group">
                            <label for="Subcategory-@i" class="control-label">Subcategoria</label>
                            <select id="Subcategory-@i" class="form-control subcategory" asp-items="@(new SelectList(ViewBag.SubcategoryId, "Value", "Text", @Model[i].TransactionType.SubcategoryId))"></select>
                        </div>
                    </div>
                    <div class="col-2 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].TransactionTypeId" class="control-label"></label>
                            <select id="Type-@i" asp-for="@Model[i].TransactionTypeId type" class="form-control type" asp-items="@(new SelectList(ViewBag.TypeId, "Value", "Text", @Model[i].TransactionTypeId))"></select>
                        </div>
                    </div>
                    <div class="col-1 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].TotalBudgeted" class="control-label"></label>
                            <input asp-for="@Model[i].TotalBudgeted" class="form-control TotalBudget"  id="TotalBudget-@i" />
                            <span asp-validation-for="@Model[i].TotalBudgeted" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-2 col-md-1 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].Frequency" class="control-label"></label>
                            <input asp-for="@Model[i].Frequency" class="form-control Frequency" id="Frequency-@i" />
                            <span asp-validation-for="@Model[i].Frequency" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-2 col-md-1 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].TotalAmount" class="control-label"></label>
                            <input asp-for="@Model[i].TotalAmount" class="form-control TotalAmount" id="TotalAmount-@i" disabled />
                            <span asp-validation-for="@Model[i].TotalAmount" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-1 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].TransactionDay" class="control-label"></label>
                            <input asp-for="@Model[i].TransactionDay" class="form-control" />
                            <span asp-validation-for="@Model[i].TransactionDay" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-3 align-self-auto">
                        <div class="form-group">
                            <label asp-for="@Model[i].InitialMonth" class="control-label"></label>
                            <input asp-for="@Model[i].InitialMonth" class="form-control" />
                            <span asp-validation-for="@Model[i].InitialMonth" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <hr />
        }
        <div class="input-group mb-3">
            <input type="submit" value="Salvar" class="btn btn-outline-secondary" />
            <a asp-action="Index" class="btn btn-outline-secondary">Voltar</a>
        </div>

    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^[0-9]+(,[0-9]+)?$/.test(value);
        };
        $(document).on('click', '.category', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var categoryElementId = $(this).attr("id");
            var isExpenseElement = "#isExpense-" + GetElementIndex(categoryElementId);
            var elementChecked = $(isExpenseElement).prop("checked");
            GetCategoriesList(url, categoryElementId, elementChecked);
        });
        $(document).on('change', '.category', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var categoryId = $(this).val();
            var subcategoryElementId = "Subcategory-" + GetElementIndex($(this).attr("Id"));
            GetSubcategoriesList(url, categoryId, subcategoryElementId);
        });
        $(document).on('click', '.subcategory', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var subcategoryElementId = $(this).attr("id");
            var categoryElementId = '#Category-' + GetElementIndex(subcategoryElementId);
            var categoryId = $(categoryElementId).val();
            GetSubcategoriesList(url, categoryId, subcategoryElementId);
        });
        $(document).on('change', '.subcategory', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var subcategoryId = $(this).val();
            var typeElementId = '#Type-' + GetElementIndex($(this).attr("id"));
            GetTypesList(url, subcategoryId, typeElementId);
        });
        $(document).on('click', '.type', function () {
            var url = '@ViewBag.Url/' + 'Transactions/';
            var typeElementId = '#' + $(this).attr("id");
            var subcategoryElementId = '#Subcategory-' + GetElementIndex(typeElementId)
            var subcategoryId = $(subcategoryElementId).val();
            GetTypesList(url, subcategoryId, typeElementId);
        });
        $(document).on('input', '.TotalBudget', function () {
            var totalBudgetId = $(this).attr("id");
            var budget = $(this).val();
            var elementIndex = GetElementIndex(totalBudgetId);
            var TotalAmountId = '#TotalAmount-' + elementIndex;
            var frequencyId = '#Frequency-' + elementIndex;
            var frequency = $(frequencyId).val();
            $(TotalAmountId).val((frequency * budget).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
        })
        function formatNumber(input) {
            var value = parseFloat(input.value.replace(/[^\d,-]/g, '')); // Remove caracteres não numéricos
            input.value = value.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        }
        $(document).ready(function () {
            $('.TotalAmount').each(function () {
                formatNumber(this);
            });
        });
    </script>
}
